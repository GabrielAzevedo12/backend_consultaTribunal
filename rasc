from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import Select
from time import sleep
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from webdriver_manager.chrome import ChromeDriverManager
from selenium.webdriver.chrome.service import Service
import os
import json
#from selenium.webdriver.chrome.options import Options

def page_is_loading(driver):
    while True:
        x = driver.execute_script("return document.readyState")
        if x == "complete":
            return True
        else:
            yield False

def echos(array):
    for e in array:
        print(e)

def write(path, dado, dadotype):
    #echo {dado} > \"{path}\" &&\
    print(f"{path}")
    if [dadotype == "json"]:
         arquivo = open(path, "w", -1, "utf-8")
         arquivo.write(json.dumps(dado, ensure_ascii=False, indent=4, sort_keys=True))
    else:
        arquivo = open(path, "w", -1, "utf-8")
        arquivo.write(str(dado))

def cat_url_tribunal(options_values):

    data=''
    chrome_options = webdriver.ChromeOptions()
    chrome_options.add_argument("--no-sandbox")
    chrome_options.add_argument("--headless")
    chrome_options.add_argument("--disable-gpu")
    driver = webdriver.Chrome(options=chrome_options)

    try:
        #go to page
        driver.get("https://dje.tjsp.jus.br/cdje/index.do")
        driver.implicitly_wait(20)
        wait = WebDriverWait(driver, 10)
    
        sleep(0.5)
        #select option cadernos ...
        select_cadernos = Select(driver.find_element(By.ID, "cadernos"))
        select_cadernos.select_by_value(options_values['cadernos'])
        value_cadernos = 0
        list_texts_cadernos = []
    
        for o in select_cadernos.options:
           list_texts_cadernos.append({"text": o.text, "value": o.get_property("value"), "index": value_cadernos})
           value_cadernos = value_cadernos + 1
    
        #select_cadernos.select_by_visible_text("Caderno 2 - Judicial - 2ª Instância - Processamento - Parte II")
        sleep(0.5)
        #select option secao ...
        select_secoes = Select(driver.find_element(By.ID, "secoes"))
        select_secoes.select_by_value(options_values['secoes'])
        value_secoes = 0
        list_texts_secoes = []
    
        for o in select_secoes.options:
           list_texts_secoes.append({"text": o.text, "value": o.get_property("value"), "index": value_secoes})
           value_secoes = value_secoes + 1
    
        #select_secoes.select_by_visible_text("Seção de Direito Privado")
        sleep(0.5)
        #consultar ...
        consultar = driver.find_element(By.ID, "consultar")
        consultar.click()
    
        # Wait for the new window or tab
        wait.until(EC.number_of_windows_to_be(2))
        driver.switch_to.window(driver.window_handles[1])
        print(driver.current_url)
    
        #Wait for frame pdf is open in new window
        sleep(1)
        driver.execute_script("window.location.replace( document.getElementsByName('bottomFrame')[0].contentWindow.location.href )")
        command = "chrome " + "\"" + driver.current_url + "\""
        os.system(command)
        data = driver.current_url
         #echos(list_texts_secoes)
        write("./dados/cadernos.json", list_texts_cadernos, "json")
        write("./dados/secao.json", list_texts_secoes, "json")
        return data

    finally:
        driver.quit()

def teste():
    data = cat_url_tribunal()
    print(f"this is data : {data}")

